name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
      branches: [ main ]
  workflow_dispatch:
  repository_dispatch:
  schedule:
    # 8:00 AM Europe/Warsaw (6:00 UTC, using UTC+2 summer time)
    - cron: '0 6 * * *'
    # 12:00 PM Europe/Warsaw (10:00 UTC)
    - cron: '0 10 * * *'
    # 4:00 PM Europe/Warsaw (14:00 UTC)
    - cron: '0 14 * * *'
    # 8:00 PM Europe/Warsaw (18:00 UTC)
    - cron: '0 18 * * *'
    # Midnight Europe/Warsaw (22:00 UTC previous day)
    - cron: '0 22 * * *'

jobs:
  init:
    name: Initializing environment
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Fetch Typeberry Docker image
        run: npm run fetch-typeberry
      - name: Build minifuzz
        run: npm run build-minifuzz

  docker-works:
    needs: init
    name: Docker Works Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Docker Works test
        run: |
          npm exec tsx --test tests/docker-works.test.ts

  npm-works:
    needs: init
    name: NPM Works Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run NPM Works test
        run: |
          npm exec tsx --test tests/npm-works.test.ts

  minifuzz-burn:
    needs: init
    name: Minifuzz Burn Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Minifuzz Burn test
        run: |
          npm exec tsx --test tests/minifuzz/burn.test.ts

  minifuzz-faulty:
    needs: init
    name: Minifuzz Faulty Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Minifuzz Faulty test
        run: |
          npm exec tsx --test tests/minifuzz/faulty.test.ts

  minifuzz-forks:
    needs: init
    name: Minifuzz Forks Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Minifuzz Forks test
        run: |
          npm exec tsx --test tests/minifuzz/forks.test.ts

  minifuzz-no-forks:
    needs: init
    name: Minifuzz No Forks Test
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Minifuzz No Forks test
        run: |
          npm exec tsx --test tests/minifuzz/no_forks.test.ts
